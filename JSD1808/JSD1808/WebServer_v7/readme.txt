解决空请求问题：

HTTP协议有说明这种情况，允许客户端连接服务端后发送空请求实际并没有发送标准的请求内容。

对于我们现阶段代码而言，ClientHandler做的第一步就是解析请求，
而请求对象HttpRequest实例化时一定会开始解析工作顺序解析请求行，消息头，消息正文。
然后若客户端发送的是空请求，则在解析请求行获取其中三部分信息method，url，protocol时由于拆分不出三项，
会导致下标越界

解决办法：当解析请求行时遇到空请求，直接向ClientHandler抛出空请求异常（一个自定义异常），
当ClientHandler接收到该异常后忽略本次处理客户端的后续操作。

1:在com.webserver.http包中定义一个类：
EmptyRequestExcepetion，使用这个类的实例表示一个空请求异常

2：在HttpRequest解析请求行的方法：parseRequestLine中当读取请求行后，添加判断，
若这行字符串是一个空字符串，则这个请求是一个空请求，那么就实例化一个空请求异常并将其抛出。

3：在HttpRequest的构造方法中继续声明将空请求异常抛出。

4：在ClientHandler中，添加一个catch，单独捕获空请求异常，
这样当实例化HttpRequest解析请求时若其构造方法抛出异常
则跳过后续处理请求的所有步骤，直接与客户端断开连接即可。